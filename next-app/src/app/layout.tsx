import { ReactPDFProvider } from '@/components/react-pdf-provider';
import { Toaster } from '@/components/ui/toaster';
import ReactQueryProvider from '@/packages/react-query/provider';
import type { Metadata } from 'next';
import localFont from 'next/font/local';
import 'react-pdf/dist/Page/AnnotationLayer.css';
import 'react-pdf/dist/Page/TextLayer.css';
import './globals.css';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

const RootLayout = async ({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) => {
  const { locale } = await params;

  return (
    <html lang={locale ?? 'en'}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} bg-gradient antialiased`}
      >
        <ReactQueryProvider>
          <ReactPDFProvider>{children}</ReactPDFProvider>
          <Toaster />
        </ReactQueryProvider>
      </body>
    </html>
  );
};

export default RootLayout;
